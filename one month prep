1.Plus Minus
#!/bin/python3

import math
import os
import random
import re
import sys

def plusMinus(arr):
    a=len(arr)
    c=0
    d=0
    e=0
    for i in range(a):
        if(arr[i]==0):
            c+=1
        elif(arr[i]>=1):
            d+=1
        else:
            e+=1
    print("{:.6f}".format(d/a))
    print("{:.6f}".format(e/a))
    print("{:.6f}".format(c/a))
if __name__ == '__main__':
    n = int(input().strip())

    arr = list(map(int, input().rstrip().split()))

    plusMinus(arr)

2.Mini Max sum
#!/bin/python3

import math
import os
import random
import re
import sys

def miniMaxSum(arr):
    arr.sort()
    a=len(arr)
    count=0
    su=0
    for i in range(len(arr)-1):
        count+=arr[i]
    arr.sort(reverse=True)
    for j in range(a-1):
        su+=arr[j]
    print(count,su)
   

if __name__ == '__main__':

    arr = list(map(int, input().rstrip().split()))

    miniMaxSum(arr)


3.Time conversion
#!/bin/python3

import math
import os
import random
import re
import sys

def timeConversion(s):
    a=s[-2:]
    b=12+int(s[0:2])
    e=12-int(s[0:2])
    c=""
    d=s[2:8]
    if(a=="PM" and s[0:2]!="12"):
        c=str(b)+d
        return c;
    elif(a=="AM" and s[0:2]!="12"):
        c=s[0:8]
        return c;
    elif(a=="PM" and s[0:2]=="12" and int(s[3:5])>=00):
        c=s[0:8]
        return c;
    elif(a=="AM" and s[0:2]=="12" and int(s[3:5])>=00):
        c="00"+d
        return c;
    
        
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = timeConversion(s)

    fptr.write(result + '\n')

    fptr.close()

4.Sparse Arrays
#!/bin/python3

import math
import os
import random
import re
import sys

def matchingStrings(strings, queries):
    l=[]
    for i in range(len(queries)):
        count=0
        for j in range(len(strings)):
            if(queries[i]==strings[j]):
                count+=1
        l.append(count)
    return l

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    strings_count = int(input().strip())

    strings = []

    for _ in range(strings_count):
        strings_item = input()
        strings.append(strings_item)

    queries_count = int(input().strip())

    queries = []

    for _ in range(queries_count):
        queries_item = input()
        queries.append(queries_item)

    res = matchingStrings(strings, queries)

    fptr.write('\n'.join(map(str, res)))
    fptr.write('\n')

    fptr.close()

5.Lonely integer
#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'lonelyinteger' function below.
#
# The function is expected to return an INTEGER.
# The function accepts INTEGER_ARRAY a as parameter.
#

def lonelyinteger(a):
    l=[]
    s=[]
    for i in range(len(a)):
        if a[i] not in l:
            l.append(a[i])
        else:
            s.append(a[i])
    z=list(set(l).symmetric_difference(set(s)))
    return z[0]
            

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    a = list(map(int, input().rstrip().split()))

    result = lonelyinteger(a)

    fptr.write(str(result) + '\n')

    fptr.close()

